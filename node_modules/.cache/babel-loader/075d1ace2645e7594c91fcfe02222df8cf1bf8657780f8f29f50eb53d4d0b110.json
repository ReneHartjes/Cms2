{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ren\\xE9Hartjes\\\\OneDrive - Q-railing Europe GmbH & Co. KG\\\\Desktop\\\\cms2\\\\src\\\\components\\\\includes\\\\Dndslider.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Dndslider.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dndslider() {\n  _s();\n  let para = useParams();\n  let langarr;\n  let [sysdata, setsysdata] = useState({\n    data: []\n  });\n  function renderdata() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n  const slideshow = document.querySelector('.slide-wrap');\n  if (slideshow != null) {//make sure we don't run this script if the slideshow is not present\n  }\n  let slides = document.querySelectorAll('.slide-entry'),\n    // grab all slides\n    slideCount = slides.length,\n    //count slides\n    currentSlide = 0,\n    // find a starting place for the current slide\n    slideHeight = null,\n    // we'll need this later for height calculation\n    initialHeight = slides[0].clientHeight;\n  slides[0].classList.add('active');\n  slideshow.style.height = initialHeight + 'px';\n  function moveToSlide(n) {\n    // declare our slide navigation function\n    slides[currentSlide].className = 'slide-entry'; // assign the slide HTML element\n    currentSlide = (n + slideCount) % slideCount; // determine current slide (for prev/next functions)\n    slides[currentSlide].className = 'slide-entry active'; //if it's the current slide, add active class\n    slideHeight = slides[currentSlide].clientHeight; // get the height of the current slide\n    slideshow.style.height = slideHeight + 'px'; // set the height of the slides\n    window.addEventListener('resize', function () {\n      // if the browser resizes\n      resizedSlideHeight = slides[currentSlide].clientHeight; // get current slide height\n      slideshow.style.height = resizedSlideHeight + 'px'; // update the height of the slideshow\n    });\n  }\n\n  function nextSlide(e) {\n    moveToSlide(currentSlide + 1); // add one to index, move to the next\n  }\n  ;\n  function prevSlide(e) {\n    moveToSlide(currentSlide + -1); //remove one from index, move to the last\n  }\n  ;\n  const slideHandlers = {\n    nextSlide: function (element) {\n      // establish the method to accept any HTML element\n      document.querySelector(element).addEventListener('click', nextSlide); // hook up the selector\n    },\n\n    prevSlide: function (element) {\n      document.querySelector(element).addEventListener('click', prevSlide);\n    }\n  };\n\n  /* Hook up the individual HTML elements to the functions */\n\n  slideHandlers.nextSlide('#next-slide');\n  slideHandlers.prevSlide('#prev-slide');\n  setInterval(function () {\n    // note: using setInterval vs. setTimeout\n    nextSlide(); // run our nextSlide() function from above\n  }, 8000);\n  function nextSlide(e) {\n    moveToSlide(currentSlide + 1);\n    let code = e.keyCode;\n    if (code == 39) {\n      //right arrow key\n      moveToSlide(currentSlide + 1);\n    }\n  }\n  ;\n  function prevSlide(e) {\n    moveToSlide(currentSlide + -1);\n    let code = e.keyCode;\n    if (code == 37) {\n      //left arrow key\n      moveToSlide(currentSlide + -1);\n    }\n  }\n  ;\n  // Detect swipe events for touch devices, credit @ https://www.kirupa.com/html5/detecting_touch_swipe_gestures.htm\n  let initialX = null;\n  let initialY = null;\n  function startTouch(e) {\n    initialX = e.touches[0].clientX;\n    initialY = e.touches[0].clientY;\n  }\n  ;\n  function moveTouch(e) {\n    if (initialX === null) {\n      return;\n    }\n    if (initialY === null) {\n      return;\n    }\n    let currentX = e.touches[0].clientX;\n    let currentY = e.touches[0].clientY;\n    let diffX = initialX - currentX;\n    let diffY = initialY - currentY;\n    if (Math.abs(diffX) > Math.abs(diffY)) {\n      if (diffX > 0) {\n        // swiped left\n        moveToSlide(currentSlide + 1); // hooking up our next slide function\n      } else {\n        // swiped right\n        moveToSlide(currentSlide + -1); // hooking up our prev slide function\n      }\n    }\n\n    initialX = null;\n    initialY = null;\n    e.preventDefault();\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"slide-wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"slideshow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"slide-entry\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"slide-content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"slide-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          id: \"prev-slide\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"\\xAB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          id: \"next-slide\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"\\xBB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 1\n  }, this);\n}\n_s(Dndslider, \"U/vKK+RSsSDRLOGGQ06o/EbhudA=\", false, function () {\n  return [useParams];\n});\n_c = Dndslider;\nexport default Dndslider;\nvar _c;\n$RefreshReg$(_c, \"Dndslider\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Dndslider","para","langarr","sysdata","setsysdata","data","renderdata","slideshow","document","querySelector","slides","querySelectorAll","slideCount","length","currentSlide","slideHeight","initialHeight","clientHeight","classList","add","style","height","moveToSlide","n","className","window","addEventListener","resizedSlideHeight","nextSlide","e","prevSlide","slideHandlers","element","setInterval","code","keyCode","initialX","initialY","startTouch","touches","clientX","clientY","moveTouch","currentX","currentY","diffX","diffY","Math","abs","preventDefault"],"sources":["C:/Users/Ren√©Hartjes/OneDrive - Q-railing Europe GmbH & Co. KG/Desktop/cms2/src/components/includes/Dndslider.js"],"sourcesContent":["import React from 'react'\r\nimport {useState, useEffect } from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport './Dndslider.css'\r\n\r\nfunction Dndslider() {\r\n\r\n    let para = useParams()\r\n    let langarr\r\n    let [sysdata, setsysdata] = useState({data:[]})\r\n\r\n\r\n\r\n    function renderdata(){\r\n        return(\r\n            <h1>slider</h1>\r\n        )\r\n    }   \r\n\r\n\r\n    const slideshow = document.querySelector('.slide-wrap');\r\n\r\nif (slideshow != null ) { //make sure we don't run this script if the slideshow is not present\r\n\r\n}\r\nlet slides = document.querySelectorAll('.slide-entry'), // grab all slides\r\nslideCount = slides.length, //count slides\r\ncurrentSlide = 0, // find a starting place for the current slide\r\nslideHeight = null, // we'll need this later for height calculation\r\ninitialHeight = slides[0].clientHeight; \r\n\r\nslides[0].classList.add('active');\r\nslideshow.style.height = initialHeight + 'px';\r\n\r\n\r\nfunction moveToSlide(n) { // declare our slide navigation function\r\n    slides[currentSlide].className = 'slide-entry'; // assign the slide HTML element\r\n    currentSlide = (n+slideCount)%slideCount; // determine current slide (for prev/next functions)\r\n    slides[currentSlide].className = 'slide-entry active'; //if it's the current slide, add active class\r\n    slideHeight = slides[currentSlide].clientHeight; // get the height of the current slide\r\n    slideshow.style.height = slideHeight + 'px'; // set the height of the slides\r\n    window.addEventListener('resize', function(){ // if the browser resizes\r\n      resizedSlideHeight = slides[currentSlide].clientHeight; // get current slide height\r\n      slideshow.style.height = resizedSlideHeight + 'px'; // update the height of the slideshow\r\n    });\r\n  }\r\n\r\n  function nextSlide(e){\r\n    moveToSlide(currentSlide+1); // add one to index, move to the next\r\n  };\r\n  function prevSlide(e){\r\n    moveToSlide(currentSlide+-1); //remove one from index, move to the last\r\n  };\r\n\r\n\r\n  const slideHandlers = {\r\n    nextSlide: function(element){ // establish the method to accept any HTML element\r\n      document.querySelector(element).addEventListener('click',nextSlide); // hook up the selector\r\n    },\r\n    prevSlide: function(element){\r\n      document.querySelector(element).addEventListener('click',prevSlide);\r\n    }\r\n  }\r\n  \r\n  /* Hook up the individual HTML elements to the functions */\r\n  \r\n  slideHandlers.nextSlide('#next-slide');\r\n  slideHandlers.prevSlide('#prev-slide');\r\n\r\n\r\n  setInterval(function(){ // note: using setInterval vs. setTimeout\r\n    nextSlide(); // run our nextSlide() function from above\r\n  },8000);\r\n\r\n\r\n  function nextSlide(e){\r\n    moveToSlide(currentSlide+1);\r\n    let code = e.keyCode;\r\n    if( code == 39 ) { //right arrow key\r\n      moveToSlide(currentSlide+1);\r\n    }\r\n  };\r\n  function prevSlide(e){\r\n    moveToSlide(currentSlide+-1);\r\n    let code = e.keyCode;\r\n    if( code == 37 ) { //left arrow key\r\n      moveToSlide(currentSlide+-1);\r\n    }\r\n  };\r\n  // Detect swipe events for touch devices, credit @ https://www.kirupa.com/html5/detecting_touch_swipe_gestures.htm\r\nlet initialX = null;\r\nlet initialY = null;\r\nfunction startTouch(e) {\r\n  initialX = e.touches[0].clientX;\r\n  initialY = e.touches[0].clientY;\r\n};\r\nfunction moveTouch(e) {\r\n  if (initialX === null) {\r\n    return;\r\n  }\r\n  if (initialY === null) {\r\n    return;\r\n  }\r\n  let currentX = e.touches[0].clientX;\r\n  let currentY = e.touches[0].clientY;\r\n  let diffX = initialX - currentX;\r\n  let diffY = initialY - currentY;\r\nif (Math.abs(diffX) > Math.abs(diffY)) {\r\n    if (diffX > 0) { // swiped left\r\n      moveToSlide(currentSlide+1); // hooking up our next slide function\r\n    } \r\nelse { // swiped right\r\n      moveToSlide(currentSlide+-1); // hooking up our prev slide function\r\n    }\r\n}\r\n  initialX = null;\r\n  initialY = null;\r\n  e.preventDefault();\r\n};\r\n\r\n  \r\n  return (\r\n<div class=\"slide-wrap\">\r\n  <div class=\"slideshow\">\r\n\r\n    <div class=\"slide-entry\">\r\n      <div class=\"slide-content\"></div>\r\n    </div>\r\n\r\n    <ul class=\"slide-nav\">\r\n      <li id=\"prev-slide\"><i>¬´</i></li>\r\n      <li id=\"next-slide\"><i>¬ª</i></li>\r\n    </ul> \r\n\r\n  </div>\r\n\r\n</div> \r\n\r\n  )\r\n}\r\n\r\nexport default Dndslider"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}